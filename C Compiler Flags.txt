## C Compiler Flags:
#---------------------------------------------------------------------------------------------#
-w
    Inhibit all warning messages.
#---------------------------------------------------------------------------------------------#
-Werror
    Make all warnings into errors
#---------------------------------------------------------------------------------------------#
-Werror=
    Make the specified warning into an error.
	ex: -Werror=switch turns the warnings controlled by -Wswitch into errors.
	ex: -Wno-error=switch makes -Wswitch warnings not be errors, even when -Werror is in effect. 
#---------------------------------------------------------------------------------------------#
-Wfatal-errors
    This option causes the compiler to abort compilation on the first error occurred.
#---------------------------------------------------------------------------------------------#
-Wno-<warning> to disable the warning altogether
-Wno-error=<warning> to keep the warning enabled but not trigger an error.
#---------------------------------------------------------------------------------------------#
-Wpedantic
-pedantic
    Issue all the warnings demanded by strict ISO C and ISO C++; reject all programs that use forbidden extensions, and some other programs that do not follow ISO C and ISO C++. 
#---------------------------------------------------------------------------------------------#
-Wdouble-promotion 
	if your MCU cann't support "double precision floating point number", then generate warning if convert value or variable to double  
#---------------------------------------------------------------------------------------------#
-Wundef
	A classic bug encountered in C code is an undefined macro silently evaluating as 0 and causing unexpected behavior so use -wundef to generate warning.
#---------------------------------------------------------------------------------------------#
-fstack-usage
	which can be used to monitor stack space in a function and emit warnings when the usage is too high.the "-fstack-usage" flag which will emit .su files for each c file you compile.
-Wstack-usage=<stack_limit> 
	can also be leveraged to emit a warning when stack usage exceeds a certain value.
#---------------------------------------------------------------------------------------------#
-Wconversion 
	can be used to generate warnings when implicit conversions that are likely to change the underlying value take place. 
#---------------------------------------------------------------------------------------------#
-g3
	When a binary is loaded on an embedded device, it is important that debug information is included in the ELF. Otherwise, gdb (or your IDE) will not be able to display variables or backtraces. 
#---------------------------------------------------------------------------------------------#
-Os [0,1,2,3,s]
	optimize for size. 
#---------------------------------------------------------------------------------------------#
-ffunction-sections, -fdata-sections, & --gc-sections
	This becomes very clear when examining the mapfile and seeing a bunch of symbols[function, var] in the .text section.
#---------------------------------------------------------------------------------------------#
-Wpadded
	Warn if padding is added to a structure due to alignment requirements.
#---------------------------------------------------------------------------------------------#
-Wall 
	turns on the following warning flags:
	-Waddress   
	-Warray-bounds=1 (only with -O2)  
	-Wbool-compare  
	-Wbool-operation  
	-Wc++11-compat  -Wc++14-compat  
	-Wcatch-value (C++ and Objective-C++ only)  
	-Wchar-subscripts  
	-Wcomment  
	-Wduplicate-decl-specifier (C and Objective-C only) 
	-Wenum-compare (in C/ObjC; this is on by default in C++) 
	-Wformat   
	-Wint-in-bool-context  
	-Wimplicit (C and Objective-C only) 
	-Wimplicit-int (C and Objective-C only) 
	-Wimplicit-function-declaration (C and Objective-C only) 
	-Winit-self (only for C++) 
	-Wlogical-not-parentheses 
	-Wmain (only for C/ObjC and unless -ffreestanding)  
	-Wmaybe-uninitialized 
	-Wmemset-elt-size 
	-Wmemset-transposed-args 
	-Wmisleading-indentation (only for C/C++) 
	-Wmissing-attributes 
	-Wmissing-braces (only for C/ObjC) 
	-Wmultistatement-macros  
	-Wnarrowing (only for C++)  
	-Wnonnull  
	-Wnonnull-compare  
	-Wopenmp-simd 
	-Wparentheses  
	-Wpointer-sign  
	-Wreorder   
	-Wrestrict   
	-Wreturn-type  
	-Wsequence-point  
	-Wsign-compare (only in C++)  
	-Wsizeof-pointer-div 
	-Wsizeof-pointer-memaccess 
	-Wstrict-aliasing  
	-Wstrict-overflow=1  
	-Wstringop-truncation  
	-Wswitch  
	-Wtautological-compare  
	-Wtrigraphs  
	-Wuninitialized  
	-Wunknown-pragmas  
	-Wunused-function  
	-Wunused-label     
	-Wunused-value     
	-Wunused-variable  
	-Wvolatile-register-var 

#---------------------------------------------------------------------------------------------#
-Wextra
    This enables some extra warning flags that are not enabled by -Wall.
    -Wclobbered  
    -Wcast-function-type  
    -Wempty-body  
    -Wignored-qualifiers 
    -Wimplicit-fallthrough=3 
    -Wmissing-field-initializers  
    -Wmissing-parameter-type (C only)  
    -Wold-style-declaration (C only)  
    -Woverride-init  
    -Wsign-compare (C only) 
    -Wtype-limits  
    -Wuninitialized  
    -Wshift-negative-value (in C++03 and in C99 and newer)  
    -Wunused-parameter (only with -Wunused or -Wall) 
    -Wunused-but-set-parameter (only with -Wunused or -Wall)  

#---------------------------------------------------------------------------------------------#
